<?xml version='1.0' encoding='UTF-8'?>
<chapter xmlns="http://docbook.org/ns/docbook"
xmlns:xi="http://www.w3.org/2001/XInclude"
xmlns:xl="http://www.w3.org/1999/xlink"
version="5.0"
xml:id="book">
  <title>Creating a Book</title>
  <info>
    <abstract>
      <para>Books are the top level of organization for topics in a library. They are a collection of sub-topics organized into chapters. The 
        mark-up for a book contains the information creating the legal notices, metadata, and other information needed for collection 
        of topics. The book mark-up also includes the import statements for each of the chapters.</para>
    </abstract>
  </info>
  <section>
    <title>Common Elements</title>
    <simplesect>
      <title>Overview</title>
      <para>XML based books share a number of common elements. These include:</para>
      <itemizedlist>
        <listitem>
          <para>A top-level declaration importing the entities used in the library</para>
        </listitem>
        <listitem>
          <para>A <tag class="element">root</tag> element</para>
        </listitem>
        <listitem>
          <para>A <tag class="element">title</tag> element</para>
        </listitem>
        <listitem>
          <para>An <tag class="element">info</tag> element describing the book's front matter</para>
        </listitem>
        <listitem>
          <para>An <tag class="element">index</tag> element that generates the books index</para>
        </listitem>
      </itemizedlist>
    </simplesect>
   <simplesect>
    <title>Top-level declaration</title>
     <para>The first few lines of an XML book will contain some boilerplate lines. These lines include the XML encoding statement, the 
      <markup>DOCTYPE</markup> declaration, and an entity declaration for the variable used in the book.</para>
     <para><xref linkend="topLevel"/> shows a sample book file declaration.</para>
     <example xml:id="topLevel">
       <?dbfo pgwide="1"?>
       <title>Declaration Statements in a Book</title>
       <programlisting>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE book [
&lt;!ENTITY % vars SYSTEM "../common/vars.xml"&gt;
%vars;]&gt;
</programlisting>
    </example>
    <para>The line beginning with <markup>!ENTITY</markup> and the line beginning with <markup>%vars;</markup> specify an XML file defining a 
      number of variables used throughout the book. These entities include values like the product name and the version of the product.</para>
  </simplesect>
  <simplesect>
    <title>Root element</title>
    <para>The root element of an XML book is the <tag class="element">book</tag> element. The <tag class="element">book</tag> element provides a wrapper for parts, chapters,
    appendices, indexes, and glossaries.</para>
    <para>The <tag class="element">book</tag> element needs to include the XML namespace declarations shown in <xref linkend="BookRootXMLNS"/>:</para>
<example xml:id="BookRootXMLNS">
  <title>XML Namespace Declarations</title>
  <programlisting>&lt;book <emphasis role="bold">xmlns="http://docbook.org/ns/docbook"
xmlns:xi="http://www.w3.org/2001/XInclude"
xmlns:xl="http://www.w3.org/1999/xlink"</emphasis>
... &gt;</programlisting>
</example>
    <para>The <tag class="element">book</tag> element's <tag class="attribute">version</tag> attribute must be set to <tag class="attvalue">5.0</tag>.</para>
    <para>You must also specify a value for the <tag class="element">book</tag> element's <tag class="attribute">xml:id</tag> attribute. The id should follow the syntax <replaceable>ProductBookid</replaceable>. <replaceable>Bookid</replaceable> should be a reasonable approximation of the books title in one word.</para>
    <para>You can also use the <tag class="element">book</tag> element's <tag class="attribute">status</tag> attribute to embed a draft stamp in the book. You do this by setting <tag class="attribute">status</tag> attribute to <tag class="attvalue">draft</tag>.</para>
  </simplesect>
  <simplesect>
    <title>Title</title>
    <para>The first child of the <tag class="element">book</tag> element is the <tag class="element">title</tag> element. The contents of the <tag class="element">title</tag> element is the title of the book.</para>
  </simplesect>
  <simplesect>
    <title>Front matter</title>
    <para>The production templates fill in the required graphics and other formatting for the front matter of a book. However, the author needs 
      to include the proper legal notices and copyright information. All of the legal notices should be imported from the template folder in the library. 
      This way you do not have to worry about updating your books when the legal notices change.</para>
      <para>The front matter also includes the following information:</para>
      <itemizedlist>
        <listitem>
          <para>The release date</para>
        </listitem>
        <listitem>
          <para>The product name and version</para>
        </listitem>
        <listitem>
          <para>The date the document was updated</para>
        </listitem>
        <listitem>
          <para>The common keywords for the book</para>
        </listitem>
        <listitem>
          <para>The graphics for the front page</para>
        </listitem>
      </itemizedlist>
      <para>All of the information in the front matter is boiler plate and should not be updated.</para>
      <para><xref linkend="legal"/> shows a book file with the front matter imported.</para>
      <example xml:id="legal" pgwide="1">
        <?dbfo pgwide="1"?>
        <title>Front Matter Imported</title>
        <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE book [
&lt;!ENTITY % vars SYSTEM "../common/vars.xml"&gt;
%vars;]&gt;
&lt;book xmlns="http://docbook.org/ns/docbook"
xmlns:xi="http://www.w3.org/2001/XInclude"
xmlns:xl="http://www.w3.org/1999/xlink"
version="5.0"
xml:id="overview"&gt;
&lt;title&gt;What is &amp;prodname;?&lt;/title&gt;
&lt;info&gt;
&lt;xi:include href=&quot;../common/keywords.xml&quot; /&gt;
&lt;mediaobject&gt;
  &lt;imageobject role="html"&gt;
    &lt;imagedata depth=&quot;100&quot; contentwidth=&quot;146&quot; contentdepth=&quot;55&quot; 
               valign=&quot;middle&quot; fileref=&quot;./imagesdb/cover_logo.gif&quot;/&gt;
  &lt;/imageobject&gt;
&lt;/mediaobject&gt;
&lt;productname&gt;&amp;prodname;?&lt;/productname&gt;
&lt;releaseinfo&gt;Version &amp;version;?&lt;/releaseinfo&gt;
&lt;date&gt;&amp;reldate?&lt;/date&gt;
&lt;xi:include href=&quot;../common/legalblurb.xml&quot; /&gt;
&lt;xi:include href=&quot;../common/copynotice.xml&quot; /&gt;
&lt;xi:include href=&quot;../common/copydate.xml&quot; /&gt;
&lt;pubdate&gt;&lt;?dbtimestamp format="d b Y"?&gt;&lt;/pubdate&gt;
&lt;corpauthor&gt;Your Company&lt;/corpauthor&gt;
&lt;/info&gt;
...
&lt;/book&gt;</programlisting>
      </example>
    </simplesect>
 </section>
  <section>
    <title>Preface</title>
    <simplesect>
      <title>Overview</title>
      <para>The preface of your book is placed into the XML file just after the <tag class="element">info</tag> element. It is specified 
        inside of a <tag class="element">preface</tag> element. The preface should be created in a separate file and imported, using an 
        <tag class="element">xinclude</tag> element, into the book file.</para>
      <note>
        <para>Not all books have a preface. For example, FUSE books do not have prefaces.</para>
      </note>
    </simplesect>
    <simplesect>
      <title>Parts of the preface</title>
      <para>The preface of your book will have the following sections that are unique to a book:</para>
      <itemizedlist>
        <listitem>
          <para>What is covered in this book?</para>
        </listitem>
        <listitem>
          <para>Who should read this book?</para>
        </listitem>
        <listitem>
          <para>How to use this book?</para>
        </listitem>
      </itemizedlist>
      <para>In addition there are several sections that are common to all of the books in the library. These include:</para>
      <itemizedlist>
        <listitem>
          <para>Library</para>
        </listitem>
        <listitem>
          <para>How to get the latest updates</para>
        </listitem>
        <listitem>
          <para>Additional support resources</para>
        </listitem>
        <listitem>
          <para>Documentation conventions</para>
        </listitem>
      </itemizedlist>
      <para>These common sections should be imported, using <tag class="element">xinclude</tag> elements, from a common template area. This ensures that any changes are propagated across the entire library.</para>
    </simplesect>
    <simplesect>
      <title>Adding content to a preface</title>
      <para>Writing a preface is identical to writing a chapter. This is discussed
in <olink targetdoc="StyleGuide" targetptr="chapter"/>.</para>
    </simplesect>
    <simplesect>
      <title>Example</title>
      <para><xref linkend="preface"/> shows a preface that can be imported into a
book file.</para>
      <example xml:id="preface" pgwide="1">
        <?dbfo pgwide="1"?>
        <title>Book Preface</title>
        <programlisting>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE preface [
&lt;!ENTITY % vars SYSTEM &quot;../common/vars.xml&quot;&gt;
%vars;]&gt;
&lt;preface xmlns="http://docbook.org/ns/docbook"
xmlns:xi="http://www.w3.org/2001/XInclude"
xmlns:xl="http://www.w3.org/1999/xlink"
version="5.0"
xml:id=&quot;inferno&quot;&gt;
&lt;title&gt;Preface&lt;/title&gt;
&lt;section&gt;
&lt;title&gt;What is Covered in This Book&lt;/title&gt;
&lt;para&gt;A bunch of technical stuff.&lt;/para&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;title&gt;Who Should Read This Book&lt;/title&gt;
&lt;para&gt;Engineers interested in learning about the stuff discussed.&lt;/para&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;title&gt;How to Use This Book&lt;/title&gt;
&lt;para&gt;Very carefully...&lt;/para&gt;
&lt;/section&gt;
&lt;xi:include href=&quot;../common/library.xml&quot; /&gt;
&lt;xi:include href=&quot;../common/latest.xml&quot; /&gt;
&lt;xi:include href=&quot;../common/searching.xml&quot; /&gt;
&lt;xi:include href=&quot;../common/resources.xml&quot; /&gt;
&lt;xi:include href=&quot;../common/coventions.xml&quot; /&gt;
&lt;/preface&gt;</programlisting>
      </example>
    </simplesect>
  </section>
  <section>
    <title>Chapters</title>
    <simplesect>
      <title>Overview</title>
      <para>After the preface, you add the chapters to your book. Chapters are created in separate files and imported into the book file 
        using <tag class="element">xinclude</tag> elements.</para>
    </simplesect>
    <simplesect>
      <title>Writing chapters</title>
      <para>Adding content to a chapter is discussed in <olink targetdoc="StyleGuide" targetptr="chapter"/></para>
    </simplesect>
    <simplesect>
      <title>Importing chapters</title>
      <para>Chapters are imported into a book using <tag class="element">xinclude</tag> elements.</para>
    </simplesect>
  </section>
  <section>
    <title>Example Book</title>
    <para><xref linkend="sectLevel"/> shows a book.</para>
    <example xml:id="sectLevel" pgwide="1">
      <?dbfo pgwide="1"?>
      <title>An XML Book</title>
      <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE book [
&lt;!ENTITY % vars SYSTEM "../common/vars.xml"&gt;
%vars;]&gt;
&lt;book xmlns="http://docbook.org/ns/docbook"
xmlns:xi="http://www.w3.org/2001/XInclude"
xmlns:xl="http://www.w3.org/1999/xlink"
version="5.0"
xml:id=&quot;overview&quot;&gt;
&lt;title&gt;What is &amp;prodname;?&lt;/title&gt;
&lt;info&gt;
&lt;xi:include href="../common/legalblurb.xml" /&gt;
&lt;xi:include href="../common/copynotice.xml" /&gt;
&lt;xi:include href="../common/copydate.xml" /&gt;
&lt;/info&gt;
&lt;xi:include href="preface.xml" /&gt;
&lt;xi:include href="soa.xml" /&gt;
&lt;xi:include href="components.xml" /&gt;
&lt;index /&gt;
&lt;/book&gt;</programlisting>
    </example>
  </section>
</chapter>